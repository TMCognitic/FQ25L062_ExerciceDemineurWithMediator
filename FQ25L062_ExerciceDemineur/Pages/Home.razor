@implements IDisposable

@page "/"

<PageTitle>Démineur</PageTitle>

<table>
    <tbody>
        @for (int y = 0; y < 10; y++)
        {
            <tr>
                @for (int x = 0; x < 10; x++)
                {
                    <td>
                        <Case X="x" Y="y" />
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@if (message is not null)
{
    <div>
        <h1>@message</h1>
    </div>
}

@code
{
    string? message = null;
    bool firstClick = true;

    protected override void OnInitialized()
    {
        Mediator<FirstClickMessage>.Instance.Register(OnFirstClickMessage);
        Mediator<BoomMessage>.Instance.Register(OnBoomMessage);
        Mediator<WinMessage>.Instance.Register(OnWinMessage);
    }

    private void OnFirstClickMessage(FirstClickMessage message)
    {
        Mediator<FirstClickMessage>.Instance.Unregister(OnFirstClickMessage);

        //Générate Bombs
        for(int i = 0; i < 10;)
        {
            int x = Random.Shared.Next(10);
            int y = Random.Shared.Next(10);

            while(message.X == x && message.Y == y)
            {
                x = Random.Shared.Next(10);
                y = Random.Shared.Next(10);
            }

            SetHasBombMessage setHasBombMessage = new();
            Mediator<SetHasBombMessage>.Instance.Send(setHasBombMessage, d => d.Target is Case c && c.X == x && c.Y == y);

            if(setHasBombMessage.Result)
            {
                i++;
            }
        }    
    }

    private void OnBoomMessage(BoomMessage _)
    {
        Mediator<BoomMessage>.Instance.Unregister(OnBoomMessage);
        message = "Vous êtes mort!!";
        StateHasChanged();
        Mediator<DisplayMessage>.Instance.Send(new DisplayMessage(), d => d.Target is Case c);
    }

    private void OnWinMessage(WinMessage _)
    {
        Mediator<WinMessage>.Instance.Unregister(OnWinMessage);
        message = "Vous avez gagné!!";
        StateHasChanged();        
    }

    public void Dispose()
    {
        Mediator<BoomMessage>.Instance.Unregister(OnBoomMessage);
        Mediator<WinMessage>.Instance.Unregister(OnWinMessage);
    }
}
